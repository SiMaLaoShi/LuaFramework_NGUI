//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIManager), typeof(Manager));
		L.RegFunction("InitUIManager", InitUIManager);
		L.RegFunction("GetUICamera", GetUICamera);
		L.RegFunction("CreateUISync", CreateUISync);
		L.RegFunction("UpdateUIBaseType", UpdateUIBaseType);
		L.RegFunction("CreateUI", CreateUI);
		L.RegFunction("RemoveFirstLevel", RemoveFirstLevel);
		L.RegFunction("GetFirstLevelCount", GetFirstLevelCount);
		L.RegFunction("ShowUI", ShowUI);
		L.RegFunction("HideUI", HideUI);
		L.RegFunction("DestroyUI", DestroyUI);
		L.RegFunction("CloseAllUI", CloseAllUI);
		L.RegFunction("CloseAllTipsList", CloseAllTipsList);
		L.RegFunction("ClearAllUI", ClearAllUI);
		L.RegFunction("FindUIByName", FindUIByName);
		L.RegFunction("GetWndIsOpen", GetWndIsOpen);
		L.RegFunction("GetCurPopUI", GetCurPopUI);
		L.RegFunction("SetCurPopUI", SetCurPopUI);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("MainUIRoot", get_MainUIRoot, null);
		L.RegVar("CurrentUI", get_CurrentUI, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitUIManager(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.InitUIManager(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUICamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			UnityEngine.Camera o = obj.GetUICamera();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateUISync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				SubUIBase o = obj.CreateUISync(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				SubUIBase o = obj.CreateUISync(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				SubUIBase arg2 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 4);
				SubUIBase o = obj.CreateUISync(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 5)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				SubUIBase arg2 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 4);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
				SubUIBase o = obj.CreateUISync(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UIManager.CreateUISync");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateUIBaseType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase arg0 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.UpdateUIBaseType(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateUI(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				obj.CreateUI(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<bool>(L, 4))
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				obj.CreateUI(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaFramework.ResourceManager.Priority>(L, 4))
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				LuaFramework.ResourceManager.Priority arg2 = (LuaFramework.ResourceManager.Priority)ToLua.ToObject(L, 4);
				obj.CreateUI(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<SubUIBase>(L, 5))
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				SubUIBase arg3 = (SubUIBase)ToLua.ToObject(L, 5);
				obj.CreateUI(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<LuaFramework.ResourceManager.Priority>(L, 5))
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				LuaFramework.ResourceManager.Priority arg3 = (LuaFramework.ResourceManager.Priority)ToLua.ToObject(L, 5);
				obj.CreateUI(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6)
			{
				UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				SubUIBase arg3 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 5);
				LuaFramework.ResourceManager.Priority arg4 = (LuaFramework.ResourceManager.Priority)ToLua.CheckObject(L, 6, typeof(LuaFramework.ResourceManager.Priority));
				obj.CreateUI(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UIManager.CreateUI");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveFirstLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase arg0 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 2);
			obj.RemoveFirstLevel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFirstLevelCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			int o = obj.GetFirstLevelCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase arg0 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 2);
			obj.ShowUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase arg0 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 2);
			obj.HideUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase arg0 = (SubUIBase)ToLua.CheckObject<SubUIBase>(L, 2);
			obj.DestroyUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAllUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			obj.CloseAllUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAllTipsList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			obj.CloseAllTipsList();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAllUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			obj.ClearAllUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindUIByName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			SubUIBase o = obj.FindUIByName(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetWndIsOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			bool o = obj.GetWndIsOpen();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurPopUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			SubUIBase o = obj.GetCurPopUI();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurPopUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIManager obj = (UIManager)ToLua.CheckObject<UIManager>(L, 1);
			UIBase arg0 = (UIBase)ToLua.CheckObject<UIBase>(L, 2);
			obj.SetCurPopUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MainUIRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager obj = (UIManager)o;
			UnityEngine.GameObject ret = obj.MainUIRoot;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MainUIRoot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurrentUI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIManager obj = (UIManager)o;
			SubUIBase ret = obj.CurrentUI;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurrentUI on a nil value");
		}
	}
}

